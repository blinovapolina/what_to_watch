{"ast":null,"code":"var _jsxFileName = \"/Users/polinochka/VScodeProjects/what_to_watch/frontend/src/App.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { BrowserRouter, Route, Routes, useNavigate } from \"react-router-dom\";\nimport { Home } from \"./pages/home/home\";\nimport { Registration } from \"./pages/registration/registration\";\nimport { Selected } from \"./pages/selected/selected\";\n\n// Главный компонент приложения\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // Состояние для отслеживания авторизации\n  const [userInfo, setUserInfo] = useState(null); // Информация о пользователе\n  const [openProfileModal, setOpenProfileModal] = useState(false); // Модалка профиля\n\n  // Функция, которая будет вызываться при успешной авторизации\n  const handleLoginSuccess = user => {\n    setIsLoggedIn(true);\n    setUserInfo(user); // Сохраняем информацию о пользователе\n  };\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      style: {\n        margin: \"-8px\",\n        overflow: \"hidden\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/account\",\n          element: isLoggedIn ? /*#__PURE__*/_jsxDEV(Home, {\n            openProfileModal: openProfileModal,\n            setOpenProfileModal: setOpenProfileModal,\n            userInfo: userInfo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(Registration, {\n            onLoginSuccess: handleLoginSuccess\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Registration, {\n            onLoginSuccess: handleLoginSuccess\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/selected\",\n          element: isLoggedIn ? /*#__PURE__*/_jsxDEV(Selected, {\n            openProfileModal: openProfileModal,\n            setOpenProfileModal: setOpenProfileModal,\n            userInfo: userInfo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(Registration, {\n            onLoginSuccess: handleLoginSuccess\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"MtyKLIEoyTfIx1W+mNkvpBCuSIs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","BrowserRouter","Route","Routes","useNavigate","Home","Registration","Selected","jsxDEV","_jsxDEV","App","_s","isLoggedIn","setIsLoggedIn","userInfo","setUserInfo","openProfileModal","setOpenProfileModal","handleLoginSuccess","user","children","className","style","margin","overflow","path","element","fileName","_jsxFileName","lineNumber","columnNumber","onLoginSuccess","_c","$RefreshReg$"],"sources":["/Users/polinochka/VScodeProjects/what_to_watch/frontend/src/App.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport { BrowserRouter, Route, Routes, useNavigate } from \"react-router-dom\";\nimport { Home } from \"./pages/home/home\";\nimport { Registration } from \"./pages/registration/registration\";\nimport { Selected } from \"./pages/selected/selected\";\n\n// Главный компонент приложения\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // Состояние для отслеживания авторизации\n  const [userInfo, setUserInfo] = useState(null); // Информация о пользователе\n  const [openProfileModal, setOpenProfileModal] = useState(false); // Модалка профиля\n\n  // Функция, которая будет вызываться при успешной авторизации\n  const handleLoginSuccess = (user) => {\n    setIsLoggedIn(true);\n    setUserInfo(user); // Сохраняем информацию о пользователе\n  };\n\n  return (\n    <BrowserRouter>\n      <div className=\"App\" style={{ margin: \"-8px\", overflow: \"hidden\" }}>\n        <Routes>\n          {/* Страница аккаунта, если пользователь авторизован */}\n          <Route\n            path=\"/account\"\n            element={\n              isLoggedIn ? (\n                <Home\n                  openProfileModal={openProfileModal}\n                  setOpenProfileModal={setOpenProfileModal}\n                  userInfo={userInfo}\n                />\n              ) : (\n                <Registration onLoginSuccess={handleLoginSuccess} />\n              )\n            }\n          />\n          {/* Страница регистрации (если не авторизован) */}\n          <Route\n            path=\"/\"\n            element={<Registration onLoginSuccess={handleLoginSuccess} />}\n          />\n          {/* Страница избранного */}\n          <Route\n            path=\"/selected\"\n            element={\n              isLoggedIn ? (\n                <Selected\n                  openProfileModal={openProfileModal}\n                  setOpenProfileModal={setOpenProfileModal}\n                  userInfo={userInfo}\n                />\n              ) : (\n                <Registration onLoginSuccess={handleLoginSuccess} />\n              )\n            }\n          />\n        </Routes>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}