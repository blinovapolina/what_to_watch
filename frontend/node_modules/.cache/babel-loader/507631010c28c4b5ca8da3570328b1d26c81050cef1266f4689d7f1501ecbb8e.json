{"ast":null,"code":"var _jsxFileName = \"/Users/polinochka/VScodeProjects/what_to_watch/frontend/src/pages/registration/registration.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { RegistrationModal } from \"../../components/registrationModal/registrationModal\";\nimport { getToken } from \"../../services/auth\"; // Импортируем функцию для получения токена\nimport \"./registration.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Registration = () => {\n  _s();\n  const [registrationModal, setRegistrationModal] = useState(\"login\");\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\"); // Для отображения ошибок\n\n  // Функция для обработки логина\n  const handleLogin = async () => {\n    try {\n      const token = await getToken(username, password);\n      localStorage.setItem(\"token\", token);\n      setIsLoggedIn(true); // Пользователь авторизован\n      setErrorMessage(\"\"); // Очистка сообщения об ошибке\n    } catch (err) {\n      setErrorMessage(\"Ошибка авторизации. Проверьте данные.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"registration\",\n    children: /*#__PURE__*/_jsxDEV(RegistrationModal, {\n      registrationModal: registrationModal,\n      setRegistrationModal: setRegistrationModal,\n      handleLogin: handleLogin,\n      setUsername: setUsername,\n      setPassword: setPassword,\n      errorMessage: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(Registration, \"egnlYTebWBhmNNUZVsfvw60vURg=\");\n_c = Registration;\nvar _c;\n$RefreshReg$(_c, \"Registration\");","map":{"version":3,"names":["useState","RegistrationModal","getToken","jsxDEV","_jsxDEV","Registration","_s","registrationModal","setRegistrationModal","isLoggedIn","setIsLoggedIn","username","setUsername","password","setPassword","errorMessage","setErrorMessage","handleLogin","token","localStorage","setItem","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/polinochka/VScodeProjects/what_to_watch/frontend/src/pages/registration/registration.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport { RegistrationModal } from \"../../components/registrationModal/registrationModal\";\nimport { getToken } from \"../../services/auth\";  // Импортируем функцию для получения токена\nimport \"./registration.css\";\n\nexport const Registration = () => {\n  const [registrationModal, setRegistrationModal] = useState(\"login\");\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\"); // Для отображения ошибок\n\n  // Функция для обработки логина\n  const handleLogin = async () => {\n    try {\n      const token = await getToken(username, password);\n      localStorage.setItem(\"token\", token);\n      setIsLoggedIn(true);  // Пользователь авторизован\n      setErrorMessage(\"\");  // Очистка сообщения об ошибке\n    } catch (err) {\n      setErrorMessage(\"Ошибка авторизации. Проверьте данные.\");\n    }\n  };\n\n  return (\n    <div className=\"registration\">\n      <RegistrationModal \n        registrationModal={registrationModal} \n        setRegistrationModal={setRegistrationModal}\n        handleLogin={handleLogin} \n        setUsername={setUsername} \n        setPassword={setPassword} \n        errorMessage={errorMessage} \n      />\n    </div>\n  );\n};\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,iBAAiB,QAAQ,sDAAsD;AACxF,SAASC,QAAQ,QAAQ,qBAAqB,CAAC,CAAE;AACjD,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,OAAO,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGR,QAAQ,CAAC,OAAO,CAAC;EACnE,MAAM,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACe,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAEtD;EACA,MAAMiB,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAMC,KAAK,GAAG,MAAMhB,QAAQ,CAACS,QAAQ,EAAEE,QAAQ,CAAC;MAChDM,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,KAAK,CAAC;MACpCR,aAAa,CAAC,IAAI,CAAC,CAAC,CAAE;MACtBM,eAAe,CAAC,EAAE,CAAC,CAAC,CAAE;IACxB,CAAC,CAAC,OAAOK,GAAG,EAAE;MACZL,eAAe,CAAC,uCAAuC,CAAC;IAC1D;EACF,CAAC;EAED,oBACEZ,OAAA;IAAKkB,SAAS,EAAC,cAAc;IAAAC,QAAA,eAC3BnB,OAAA,CAACH,iBAAiB;MAChBM,iBAAiB,EAAEA,iBAAkB;MACrCC,oBAAoB,EAAEA,oBAAqB;MAC3CS,WAAW,EAAEA,WAAY;MACzBL,WAAW,EAAEA,WAAY;MACzBE,WAAW,EAAEA,WAAY;MACzBC,YAAY,EAAEA;IAAa;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACrB,EAAA,CA/BWD,YAAY;AAAAuB,EAAA,GAAZvB,YAAY;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}