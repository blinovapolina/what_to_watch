{"ast":null,"code":"const API_URL = \"http://127.0.0.1:8000/api\";\nexport const getToken = async (username, password) => {\n  try {\n    const response = await fetch(`${API_URL}/login/`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      // Пробрасываем ошибку с сообщением от сервера\n      throw new Error(errorData.error || \"Ошибка авторизации\");\n    }\n    const data = await response.json();\n    return data.access; // или data.token, смотря что отдаёт сервер\n  } catch (error) {\n    throw error; // пробрасываем дальше\n  }\n};","map":{"version":3,"names":["API_URL","getToken","username","password","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","Error","error","data","access"],"sources":["/Users/polinochka/VScodeProjects/what_to_watch/frontend/src/services/auth.js"],"sourcesContent":["const API_URL = \"http://127.0.0.1:8000/api\";\n\nexport const getToken = async (username, password) => {\n    try {\n        const response = await fetch(`${API_URL}/login/`, {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({ username, password }),\n        });\n\n        if (!response.ok) {\n            const errorData = await response.json();\n            // Пробрасываем ошибку с сообщением от сервера\n            throw new Error(errorData.error || \"Ошибка авторизации\");\n        }\n\n        const data = await response.json();\n        return data.access;  // или data.token, смотря что отдаёт сервер\n    } catch (error) {\n        throw error;  // пробрасываем дальше\n    }\n};\n"],"mappings":"AAAA,MAAMA,OAAO,GAAG,2BAA2B;AAE3C,OAAO,MAAMC,QAAQ,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;EAClD,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,OAAO,SAAS,EAAE;MAC9CM,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAER,QAAQ;QAAEC;MAAS,CAAC;IAC/C,CAAC,CAAC;IAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;MACd,MAAMC,SAAS,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;MACvC;MACA,MAAM,IAAIC,KAAK,CAACF,SAAS,CAACG,KAAK,IAAI,oBAAoB,CAAC;IAC5D;IAEA,MAAMC,IAAI,GAAG,MAAMZ,QAAQ,CAACS,IAAI,CAAC,CAAC;IAClC,OAAOG,IAAI,CAACC,MAAM,CAAC,CAAE;EACzB,CAAC,CAAC,OAAOF,KAAK,EAAE;IACZ,MAAMA,KAAK,CAAC,CAAE;EAClB;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}