{"ast":null,"code":"var _jsxFileName = \"/Users/polinochka/VScodeProjects/what_to_watch/frontend/src/pages/registration/registration.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { RegistrationModal } from \"../../components/registrationModal/registrationModal\";\nimport { getToken } from \"../../services/auth\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./registration.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Registration = ({\n  onLoginSuccess\n}) => {\n  _s();\n  const [registrationModal, setRegistrationModal] = useState(\"login\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [surname, setSurname] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const navigate = useNavigate();\n  const fetchUserInfo = async token => {\n    try {\n      const res = await fetch(\"http://localhost:8000/api/profile/\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (!res.ok) throw new Error(\"Ошибка получения профиля\");\n      return await res.json();\n    } catch (e) {\n      console.error(e);\n      return null;\n    }\n  };\n  const handleLogin = async () => {\n    try {\n      const token = await getToken(username, password);\n      localStorage.setItem(\"token\", token);\n      setErrorMessage(\"\");\n      const userInfo = await fetchUserInfo(token);\n      if (onLoginSuccess && userInfo) onLoginSuccess(userInfo);\n      navigate(\"/account\");\n    } catch (err) {\n      setErrorMessage(\"Ошибка авторизации. Проверьте данные.\");\n    }\n  };\n  const handleRegister = async () => {\n    try {\n      const res = await fetch(\"http://localhost:8000/api/register/\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username,\n          password,\n          name,\n          surname,\n          email\n        })\n      });\n      if (!res.ok) {\n        throw new Error(\"Регистрация не удалась\");\n      }\n\n      // После успешной регистрации логиним\n      await handleLogin();\n    } catch (err) {\n      setErrorMessage(\"Ошибка регистрации. Проверьте данные.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"registration\",\n    children: /*#__PURE__*/_jsxDEV(RegistrationModal, {\n      registrationModal: registrationModal,\n      setRegistrationModal: setRegistrationModal,\n      handleLogin: handleLogin,\n      handleRegister: handleRegister,\n      setUsername: setUsername,\n      setPassword: setPassword,\n      setName: setName,\n      setSurname: setSurname,\n      setEmail: setEmail,\n      errorMessage: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(Registration, \"zNKEheP7gMKu/8USj/KJq3tqQ/8=\", false, function () {\n  return [useNavigate];\n});\n_c = Registration;\nvar _c;\n$RefreshReg$(_c, \"Registration\");","map":{"version":3,"names":["useState","RegistrationModal","getToken","useNavigate","jsxDEV","_jsxDEV","Registration","onLoginSuccess","_s","registrationModal","setRegistrationModal","username","setUsername","password","setPassword","name","setName","surname","setSurname","email","setEmail","errorMessage","setErrorMessage","navigate","fetchUserInfo","token","res","fetch","headers","Authorization","ok","Error","json","e","console","error","handleLogin","localStorage","setItem","userInfo","err","handleRegister","method","body","JSON","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/polinochka/VScodeProjects/what_to_watch/frontend/src/pages/registration/registration.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport { RegistrationModal } from \"../../components/registrationModal/registrationModal\";\nimport { getToken } from \"../../services/auth\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./registration.css\";\n\nexport const Registration = ({ onLoginSuccess }) => {\n  const [registrationModal, setRegistrationModal] = useState(\"login\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [surname, setSurname] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const navigate = useNavigate();\n\n  const fetchUserInfo = async (token) => {\n    try {\n      const res = await fetch(\"http://localhost:8000/api/profile/\", {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n      if (!res.ok) throw new Error(\"Ошибка получения профиля\");\n      return await res.json();\n    } catch (e) {\n      console.error(e);\n      return null;\n    }\n  };\n\n  const handleLogin = async () => {\n    try {\n      const token = await getToken(username, password);\n      localStorage.setItem(\"token\", token);\n      setErrorMessage(\"\");\n\n      const userInfo = await fetchUserInfo(token);\n      if (onLoginSuccess && userInfo) onLoginSuccess(userInfo);\n\n      navigate(\"/account\");\n    } catch (err) {\n      setErrorMessage(\"Ошибка авторизации. Проверьте данные.\");\n    }\n  };\n\n  const handleRegister = async () => {\n    try {\n      const res = await fetch(\"http://localhost:8000/api/register/\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ username, password, name, surname, email }),\n      });\n\n      if (!res.ok) {\n        throw new Error(\"Регистрация не удалась\");\n      }\n\n      // После успешной регистрации логиним\n      await handleLogin();\n    } catch (err) {\n      setErrorMessage(\"Ошибка регистрации. Проверьте данные.\");\n    }\n  };\n\n  return (\n    <div className=\"registration\">\n      <RegistrationModal\n        registrationModal={registrationModal}\n        setRegistrationModal={setRegistrationModal}\n        handleLogin={handleLogin}\n        handleRegister={handleRegister}\n        setUsername={setUsername}\n        setPassword={setPassword}\n        setName={setName}\n        setSurname={setSurname}\n        setEmail={setEmail}\n        errorMessage={errorMessage}\n      />\n    </div>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}