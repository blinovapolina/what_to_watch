{"ast":null,"code":"var _jsxFileName = \"/Users/polinochka/VScodeProjects/what_to_watch/frontend/src/App.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { BrowserRouter, Route, Routes, Navigate } from \"react-router-dom\";\nimport { Home } from \"./pages/home/home\";\nimport { Registration } from \"./pages/registration/registration\";\nimport { Selected } from \"./pages/selected/selected\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userInfo, setUserInfo] = useState(null);\n  const [openProfileModal, setOpenProfileModal] = useState(false);\n  const [loading, setLoading] = useState(true); // <-- Инициализируем loading\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"access_token\");\n    if (!token) {\n      setLoading(false); // Нет токена — отключаем загрузку\n      return;\n    }\n    const fetchUserInfo = async () => {\n      try {\n        const res = await fetch(\"http://localhost:8000/api/profile/\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (!res.ok) throw new Error(\"Не удалось получить профиль\");\n        const data = await res.json();\n        setIsLoggedIn(true);\n        setUserInfo({\n          username: data.username,\n          email: data.email,\n          name: data.name || data.first_name,\n          surname: data.surname || data.last_name\n        });\n      } catch (err) {\n        console.error(err);\n        localStorage.removeItem(\"access_token\");\n        localStorage.removeItem(\"refresh_token\");\n        setIsLoggedIn(false);\n        setUserInfo(null);\n      } finally {\n        setLoading(false); // Завершаем загрузку в любом случае\n      }\n    };\n    fetchUserInfo();\n  }, []);\n  const handleLoginSuccess = user => {\n    setIsLoggedIn(true);\n    setUserInfo(user);\n  };\n\n  // Пока идёт загрузка — показываем спиннер или текст\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"spinner\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      style: {\n        margin: \"-8px\",\n        overflow: \"hidden\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/account\",\n          element: isLoggedIn ? /*#__PURE__*/_jsxDEV(Home, {\n            openProfileModal: openProfileModal,\n            setOpenProfileModal: setOpenProfileModal,\n            userInfo: userInfo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Registration, {\n            onLoginSuccess: handleLoginSuccess\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/selected\",\n          element: isLoggedIn ? /*#__PURE__*/_jsxDEV(Selected, {\n            openProfileModal: openProfileModal,\n            setOpenProfileModal: setOpenProfileModal,\n            userInfo: userInfo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"yZh5E1TCcE/1HnMUPbMS+hadnlc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","BrowserRouter","Route","Routes","Navigate","Home","Registration","Selected","jsxDEV","_jsxDEV","App","_s","isLoggedIn","setIsLoggedIn","userInfo","setUserInfo","openProfileModal","setOpenProfileModal","loading","setLoading","token","localStorage","getItem","fetchUserInfo","res","fetch","headers","Authorization","ok","Error","data","json","username","email","name","first_name","surname","last_name","err","console","error","removeItem","handleLoginSuccess","user","className","fileName","_jsxFileName","lineNumber","columnNumber","children","style","margin","overflow","path","element","to","onLoginSuccess","_c","$RefreshReg$"],"sources":["/Users/polinochka/VScodeProjects/what_to_watch/frontend/src/App.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { BrowserRouter, Route, Routes, Navigate } from \"react-router-dom\";\nimport { Home } from \"./pages/home/home\";\nimport { Registration } from \"./pages/registration/registration\";\nimport { Selected } from \"./pages/selected/selected\";\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userInfo, setUserInfo] = useState(null);\n  const [openProfileModal, setOpenProfileModal] = useState(false);\n  const [loading, setLoading] = useState(true); // <-- Инициализируем loading\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"access_token\");\n    if (!token) {\n      setLoading(false); // Нет токена — отключаем загрузку\n      return;\n    }\n\n    const fetchUserInfo = async () => {\n      try {\n        const res = await fetch(\"http://localhost:8000/api/profile/\", {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n        if (!res.ok) throw new Error(\"Не удалось получить профиль\");\n        const data = await res.json();\n        setIsLoggedIn(true);\n        setUserInfo({\n          username: data.username,\n          email: data.email,\n          name: data.name || data.first_name,\n          surname: data.surname || data.last_name,\n        });\n      } catch (err) {\n        console.error(err);\n        localStorage.removeItem(\"access_token\");\n        localStorage.removeItem(\"refresh_token\");\n        setIsLoggedIn(false);\n        setUserInfo(null);\n      } finally {\n        setLoading(false); // Завершаем загрузку в любом случае\n      }\n    };\n\n    fetchUserInfo();\n  }, []);\n\n  const handleLoginSuccess = (user) => {\n    setIsLoggedIn(true);\n    setUserInfo(user);\n  };\n\n  // Пока идёт загрузка — показываем спиннер или текст\n  if (loading) return <div className=\"spinner\"></div>;\n\n  return (\n    <BrowserRouter>\n      <div className=\"App\" style={{ margin: \"-8px\", overflow: \"hidden\" }}>\n        <Routes>\n          <Route\n            path=\"/account\"\n            element={\n              isLoggedIn ? (\n                <Home\n                  openProfileModal={openProfileModal}\n                  setOpenProfileModal={setOpenProfileModal}\n                  userInfo={userInfo}\n                />\n              ) : (\n                <Navigate to=\"/\" />\n              )\n            }\n          />\n          <Route\n            path=\"/\"\n            element={<Registration onLoginSuccess={handleLoginSuccess} />}\n          />\n          <Route\n            path=\"/selected\"\n            element={\n              isLoggedIn ? (\n                <Selected\n                  openProfileModal={openProfileModal}\n                  setOpenProfileModal={setOpenProfileModal}\n                  userInfo={userInfo}\n                />\n              ) : (\n                <Navigate to=\"/\" />\n              )\n            }\n          />\n        </Routes>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}