{"ast":null,"code":"var _jsxFileName = \"/Users/polinochka/VScodeProjects/what_to_watch/frontend/src/pages/registration/registration.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { RegistrationModal } from \"../../components/registrationModal/registrationModal\";\nimport { getToken } from \"../../services/auth\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./registration.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Registration = ({\n  onLoginSuccess\n}) => {\n  _s();\n  const [registrationModal, setRegistrationModal] = useState(\"login\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [surname, setSurname] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const navigate = useNavigate();\n  const fetchUserInfo = async accessToken => {\n    try {\n      const res = await fetch(\"http://localhost:8000/api/profile/\", {\n        headers: {\n          Authorization: `Bearer ${accessToken}`\n        }\n      });\n      if (!res.ok) throw new Error(\"Ошибка получения профиля\");\n      const data = await res.json();\n      return {\n        username: data.username,\n        email: data.email,\n        name: data.name || data.first_name,\n        surname: data.surname || data.last_name\n      };\n    } catch (e) {\n      console.error(e);\n      return null;\n    }\n  };\n  const handleLogin = async () => {\n    try {\n      if (!username || !password) {\n        setErrorMessage(\"Пожалуйста, введите логин и пароль\");\n        return;\n      }\n      const tokens = await getToken(username, password);\n      localStorage.setItem(\"access_token\", tokens.access);\n      localStorage.setItem(\"refresh_token\", tokens.refresh);\n      setErrorMessage(\"\");\n      const userInfo = await fetchUserInfo(tokens.access);\n      if (onLoginSuccess && userInfo) onLoginSuccess(userInfo);\n      navigate(\"/account\");\n    } catch (err) {\n      setErrorMessage(err.message || \"Ошибка авторизации\");\n    }\n  };\n  const handleRegister = async () => {\n    try {\n      if (!username || !password || !name || !surname || !email) {\n        setErrorMessage(\"Пожалуйста, заполните все поля\");\n        return;\n      }\n      const res = await fetch(\"http://localhost:8000/api/register/\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username,\n          password,\n          name,\n          surname,\n          email\n        })\n      });\n      if (!res.ok) {\n        const errData = await res.json();\n        throw new Error(errData.error || \"Регистрация не удалась\");\n      }\n      await handleLogin();\n    } catch (err) {\n      setErrorMessage(err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"registration\",\n    children: /*#__PURE__*/_jsxDEV(RegistrationModal, {\n      registrationModal: registrationModal,\n      setRegistrationModal: setRegistrationModal,\n      handleLogin: handleLogin,\n      handleRegister: handleRegister,\n      setUsername: setUsername,\n      setPassword: setPassword,\n      setName: setName,\n      setSurname: setSurname,\n      setEmail: setEmail,\n      errorMessage: errorMessage,\n      setErrorMessage: setErrorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s(Registration, \"zNKEheP7gMKu/8USj/KJq3tqQ/8=\", false, function () {\n  return [useNavigate];\n});\n_c = Registration;\nvar _c;\n$RefreshReg$(_c, \"Registration\");","map":{"version":3,"names":["useState","RegistrationModal","getToken","useNavigate","jsxDEV","_jsxDEV","Registration","onLoginSuccess","_s","registrationModal","setRegistrationModal","username","setUsername","password","setPassword","name","setName","surname","setSurname","email","setEmail","errorMessage","setErrorMessage","navigate","fetchUserInfo","accessToken","res","fetch","headers","Authorization","ok","Error","data","json","first_name","last_name","e","console","error","handleLogin","tokens","localStorage","setItem","access","refresh","userInfo","err","message","handleRegister","method","body","JSON","stringify","errData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/polinochka/VScodeProjects/what_to_watch/frontend/src/pages/registration/registration.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport { RegistrationModal } from \"../../components/registrationModal/registrationModal\";\nimport { getToken } from \"../../services/auth\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./registration.css\";\n\nexport const Registration = ({ onLoginSuccess }) => {\n  const [registrationModal, setRegistrationModal] = useState(\"login\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [surname, setSurname] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const navigate = useNavigate();\n\n  const fetchUserInfo = async (accessToken) => {\n    try {\n      const res = await fetch(\"http://localhost:8000/api/profile/\", {\n        headers: {\n          Authorization: `Bearer ${accessToken}`, \n        },\n      });\n      if (!res.ok) throw new Error(\"Ошибка получения профиля\");\n      const data = await res.json();\n      return {\n        username: data.username,\n        email: data.email,\n        name: data.name || data.first_name,\n        surname: data.surname || data.last_name,\n      };\n    } catch (e) {\n      console.error(e);\n      return null;\n    }\n  };\n\n  const handleLogin = async () => {\n    try {\n      if (!username || !password) {\n        setErrorMessage(\"Пожалуйста, введите логин и пароль\");\n        return;\n      }\n\n      const tokens = await getToken(username, password);\n      localStorage.setItem(\"access_token\", tokens.access);\n      localStorage.setItem(\"refresh_token\", tokens.refresh);\n      setErrorMessage(\"\");\n\n      const userInfo = await fetchUserInfo(tokens.access);\n      if (onLoginSuccess && userInfo) onLoginSuccess(userInfo);\n\n      navigate(\"/account\");\n    } catch (err) {\n      setErrorMessage(err.message || \"Ошибка авторизации\");\n    }\n  };\n  \n  \n  const handleRegister = async () => {\n    try {\n      if (!username || !password || !name || !surname || !email) {\n        setErrorMessage(\"Пожалуйста, заполните все поля\");\n        return;\n      }\n\n      const res = await fetch(\"http://localhost:8000/api/register/\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ username, password, name, surname, email }),\n      });\n\n      if (!res.ok) {\n        const errData = await res.json();\n        throw new Error(errData.error || \"Регистрация не удалась\");\n      }\n      \n      await handleLogin();\n    } catch (err) {\n      setErrorMessage(err.message); \n    }\n  };\n\n  return (\n    <div className=\"registration\">\n      <RegistrationModal\n        registrationModal={registrationModal}\n        setRegistrationModal={setRegistrationModal}\n        handleLogin={handleLogin}\n        handleRegister={handleRegister}\n        setUsername={setUsername}\n        setPassword={setPassword}\n        setName={setName}\n        setSurname={setSurname}\n        setEmail={setEmail}\n        errorMessage={errorMessage}\n        setErrorMessage={setErrorMessage}\n      />\n    </div>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}